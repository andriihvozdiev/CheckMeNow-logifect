{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "S3 resource stack creation using Amplify CLI",
    "Parameters": {
        "bucketName": {
            "Type": "String"
        },
        "authPolicyName": {
            "Type": "String"
        },
        "unauthPolicyName": {
            "Type": "String"
        },
        "authRoleName": {
            "Type": "String"
        },
        "unauthRoleName": {
            "Type": "String"
        },
        "s3PublicPolicy": {
            "Type": "String",
            "Default": "NONE"
        },
        "s3PrivatePolicy": {
            "Type": "String",
            "Default": "NONE"
        },
        "s3ProtectedPolicy": {
            "Type": "String",
            "Default": "NONE"
        },
        "s3UploadsPolicy": {
            "Type": "String",
            "Default": "NONE"
        },
        "s3ReadPolicy": {
            "Type": "String",
            "Default": "NONE"
        },
        "s3PermissionsAuthenticatedPublic": {
            "Type": "String",
            "Default": "DISALLOW"
        },
        "s3PermissionsAuthenticatedProtected": {
            "Type": "String",
            "Default": "DISALLOW"
        },
        "s3PermissionsAuthenticatedPrivate": {
            "Type": "String",
            "Default": "DISALLOW"
        },
        "s3PermissionsAuthenticatedUploads": {
            "Type": "String",
            "Default": "DISALLOW"
        },
        "s3PermissionsGuestPublic": {
            "Type": "String",
            "Default": "DISALLOW"
        },
        "s3PermissionsGuestUploads": {
            "Type": "String",
            "Default": "DISALLOW"
        },
        "AuthenticatedAllowList": {
            "Type": "String",
            "Default": "DISALLOW"
        },
        "GuestAllowList": {
            "Type": "String",
            "Default": "DISALLOW"
        },
        "selectedGuestPermissions": {
            "Type": "CommaDelimitedList",
            "Default": "NONE"
        },
        "selectedAuthenticatedPermissions": {
            "Type": "CommaDelimitedList",
            "Default": "NONE"
        },
        "env": {
            "Type": "String"
        },
        "triggerFunction": {
            "Type": "String"
        },
        "functionS3Trigger7590264dArn": {
            "Type": "String",
            "Default": "functionS3Trigger7590264dArn"
        },
        "functionS3Trigger7590264dName": {
            "Type": "String",
            "Default": "functionS3Trigger7590264dName"
        },
        "functionS3Trigger7590264dLambdaExecutionRole": {
            "Type": "String",
            "Default": "functionS3Trigger7590264dLambdaExecutionRole"
        }
    },
    "Conditions": {
        "ShouldNotCreateEnvResources": {
            "Fn::Equals": [
                {
                    "Ref": "env"
                },
                "NONE"
            ]
        },
        "CreateAuthPublic": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "s3PermissionsAuthenticatedPublic"
                        },
                        "DISALLOW"
                    ]
                }
            ]
        },
        "CreateAuthProtected": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "s3PermissionsAuthenticatedProtected"
                        },
                        "DISALLOW"
                    ]
                }
            ]
        },
        "CreateAuthPrivate": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "s3PermissionsAuthenticatedPrivate"
                        },
                        "DISALLOW"
                    ]
                }
            ]
        },
        "CreateAuthUploads": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "s3PermissionsAuthenticatedUploads"
                        },
                        "DISALLOW"
                    ]
                }
            ]
        },
        "CreateGuestPublic": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "s3PermissionsGuestPublic"
                        },
                        "DISALLOW"
                    ]
                }
            ]
        },
        "CreateGuestUploads": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "s3PermissionsGuestUploads"
                        },
                        "DISALLOW"
                    ]
                }
            ]
        },
        "AuthReadAndList": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "AuthenticatedAllowList"
                        },
                        "DISALLOW"
                    ]
                }
            ]
        },
        "GuestReadAndList": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "GuestAllowList"
                        },
                        "DISALLOW"
                    ]
                }
            ]
        }
    },
    "Resources": {
        "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "BucketName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        {
                            "Ref": "bucketName"
                        },
                        {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "bucketName"
                                    },
                                    {
                                        "Fn::Select": [
                                            3,
                                            {
                                                "Fn::Split": [
                                                    "-",
                                                    {
                                                        "Ref": "AWS::StackName"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "-",
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "CorsConfiguration": {
                    "CorsRules": [
                        {
                            "AllowedHeaders": [
                                "*"
                            ],
                            "AllowedMethods": [
                                "GET",
                                "HEAD",
                                "PUT",
                                "POST",
                                "DELETE"
                            ],
                            "AllowedOrigins": [
                                "*"
                            ],
                            "ExposedHeaders": [
                                "x-amz-server-side-encryption",
                                "x-amz-request-id",
                                "x-amz-id-2",
                                "ETag"
                            ],
                            "Id": "S3CORSRuleId1",
                            "MaxAge": "3000"
                        }
                    ]
                },
                "NotificationConfiguration": {
                    "LambdaConfigurations": [
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Function": {
                                "Ref": "functionS3Trigger7590264dArn"
                            }
                        },
                        {
                            "Event": "s3:ObjectRemoved:*",
                            "Function": {
                                "Ref": "functionS3Trigger7590264dArn"
                            }
                        }
                    ]
                }
            },
            "DependsOn": [
                "TriggerPermissions" 
            ]
        },
        "S3TempBucket": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "BucketName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        { "Fn::Join" : [ "-", [ {"Ref": "bucketName"}, "temp"] ] },
                        {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "bucketName"
                                    },
                                    {
                                        "Fn::Select": [
                                            3,
                                            {
                                                "Fn::Split": [
                                                    "-",
                                                    {
                                                        "Ref": "AWS::StackName"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "-",
                                    {
                                        "Ref": "env"
                                    },
                                    "-",
                                    "temp"
                                ]
                            ]
                        }
                    ]
                }
            }
        },
        "S3AuthPublicPolicy": {
            "DependsOn": [
                "S3Bucket"
            ],
            "Condition": "CreateAuthPublic",
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "s3PublicPolicy"
                },
                "Roles": [
                    {
                        "Ref": "authRoleName"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": {
                                "Fn::Split": [
                                    ",",
                                    {
                                        "Ref": "s3PermissionsAuthenticatedPublic"
                                    }
                                ]
                            },
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            "/public/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "S3AuthProtectedPolicy": {
            "DependsOn": [
                "S3Bucket"
            ],
            "Condition": "CreateAuthProtected",
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "s3ProtectedPolicy"
                },
                "Roles": [
                    {
                        "Ref": "authRoleName"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": {
                                "Fn::Split": [
                                    ",",
                                    {
                                        "Ref": "s3PermissionsAuthenticatedProtected"
                                    }
                                ]
                            },
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            "/protected/${cognito-identity.amazonaws.com:sub}/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "S3AuthPrivatePolicy": {
            "DependsOn": [
                "S3Bucket"
            ],
            "Condition": "CreateAuthPrivate",
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "s3PrivatePolicy"
                },
                "Roles": [
                    {
                        "Ref": "authRoleName"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": {
                                "Fn::Split": [
                                    ",",
                                    {
                                        "Ref": "s3PermissionsAuthenticatedPrivate"
                                    }
                                ]
                            },
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            "/private/${cognito-identity.amazonaws.com:sub}/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "S3AuthUploadPolicy": {
            "DependsOn": [
                "S3Bucket"
            ],
            "Condition": "CreateAuthUploads",
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "s3UploadsPolicy"
                },
                "Roles": [
                    {
                        "Ref": "authRoleName"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": {
                                "Fn::Split": [
                                    ",",
                                    {
                                        "Ref": "s3PermissionsAuthenticatedUploads"
                                    }
                                ]
                            },
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            "/uploads/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "S3AuthReadPolicy": {
            "DependsOn": [
                "S3Bucket"
            ],
            "Condition": "AuthReadAndList",
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "s3ReadPolicy"
                },
                "Roles": [
                    {
                        "Ref": "authRoleName"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            "/protected/*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:ListBucket"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            }
                                        ]
                                    ]
                                }
                            ],
                            "Condition": {
                                "StringLike": {
                                    "s3:prefix": [
                                        "public/",
                                        "public/*",
                                        "protected/",
                                        "protected/*",
                                        "private/${cognito-identity.amazonaws.com:sub}/",
                                        "private/${cognito-identity.amazonaws.com:sub}/*"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },
        "S3GuestPublicPolicy": {
            "DependsOn": [
                "S3Bucket"
            ],
            "Condition": "CreateGuestPublic",
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "s3PublicPolicy"
                },
                "Roles": [
                    {
                        "Ref": "unauthRoleName"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": {
                                "Fn::Split": [
                                    ",",
                                    {
                                        "Ref": "s3PermissionsGuestPublic"
                                    }
                                ]
                            },
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            "/public/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "S3GuestUploadPolicy": {
            "DependsOn": [
                "S3Bucket"
            ],
            "Condition": "CreateGuestUploads",
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "s3UploadsPolicy"
                },
                "Roles": [
                    {
                        "Ref": "unauthRoleName"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": {
                                "Fn::Split": [
                                    ",",
                                    {
                                        "Ref": "s3PermissionsGuestUploads"
                                    }
                                ]
                            },
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            "/uploads/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "S3GuestReadPolicy": {
            "DependsOn": [
                "S3Bucket"
            ],
            "Condition": "GuestReadAndList",
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Ref": "s3ReadPolicy"
                },
                "Roles": [
                    {
                        "Ref": "unauthRoleName"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            "/protected/*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:ListBucket"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            }
                                        ]
                                    ]
                                }
                            ],
                            "Condition": {
                                "StringLike": {
                                    "s3:prefix": [
                                        "public/",
                                        "public/*",
                                        "protected/",
                                        "protected/*"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },
        "S3TriggerBucketPolicy": {
            "Type": "AWS::IAM::Policy",
            "DependsOn": [
                "S3Bucket"
            ],
            "Properties": {
                "PolicyName": "s3-trigger-lambda-execution-policy",
                "Roles": [
                    {
                        "Ref": "functionS3Trigger7590264dLambdaExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:ListBucket",
                                "s3:DeleteObject"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "AmazonRekognitionRole": {
			"Type": "AWS::IAM::Role",
			"Metadata" : {
				"Comment" : "This is the role of the Rekognition service." 
			},
			"Properties": {
				"RoleName": {
					"Fn::If": [
						"ShouldNotCreateEnvResources",
						"amazonRekognitionRole",
						{
							"Fn::Join": [
								"",
								[
									"amazonRekognitionRole",
									"-",
									{
										"Ref": "env"
									}
								]
							]
						}
					]
				},
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"rekognition.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				}
			}
		},
        "S3RekognitionRoleBucketPolicy": {
            "Type": "AWS::IAM::Policy",
            "Metadata" : {
				"Comment" : "This is the policy for the Rekognition service role to access the temp bucket." 
			},
            "DependsOn": [
                "AmazonRekognitionRole", "S3TempBucket"
            ],
            "Properties": {
                "PolicyName": "s3-rekognition-access-policy",
                "Roles": [
                    {
                        "Ref": "AmazonRekognitionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetBucketAcl",
                                "s3:GetBucketLocation"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3TempBucket"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject",
                                "s3:GetObjectAcl",
                                "s3:GetObjectVersion",
                                "s3:GetObjectTagging"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3TempBucket"
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "S3TempBucketPolicy": {
            "Type": "AWS::IAM::Policy",
            "DependsOn": [
                "S3TempBucket"
            ],
            "Properties": {
                "PolicyName": "s3-temp-lambda-execution-policy",
                "Roles": [
                    {
                        "Ref": "functionS3Trigger7590264dLambdaExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:ListBucket",
                                "s3:DeleteObject"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "S3TempBucket"
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "TriggerPermissions": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "functionS3Trigger7590264dName"
                },
                "Principal": "s3.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:s3:::",
                            {
                                "Fn::If": [
                                    "ShouldNotCreateEnvResources",
                                    {
                                        "Ref": "bucketName"
                                    },
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "bucketName"
                                                },
                                                {
                                                    "Fn::Select": [
                                                        3,
                                                        {
                                                            "Fn::Split": [
                                                                "-",
                                                                {
                                                                    "Ref": "AWS::StackName"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "-",
                                                {
                                                    "Ref": "env"
                                                }
                                            ]
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                }
            }
        }
    },
    "Outputs": {
        "BucketName": {
            "Value": {
                "Ref": "S3Bucket"
            },
            "Description": "Bucket name for the S3 bucket"
        },
        "Region": {
            "Value": {
                "Ref": "AWS::Region"
            }
        }
    }
}